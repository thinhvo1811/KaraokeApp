/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import dao.NhanVien_DAO;
import entity.DichVu;
import entity.HoaDon;
import entity.NhanVien;
import entity.TaiKhoan;

/**
 *
 * @author dell
 */
public class JPanel_TKDoanhThu extends javax.swing.JPanel implements KeyListener {

    /**
     * Creates new form JPanelTKDoanhThu
     */
    public JPanel_TKDoanhThu() {
        initComponents();
        model = (DefaultTableModel) tblDanhSachNV.getModel();
        tblDanhSachNV.getTableHeader().setFont(new Font("Segoe UI", Font.PLAIN, 18));
        nhanvien_DAO = new NhanVien_DAO();
    	jTabbedPaneTKDoanhThu.addTab("Theo Ngày", new JPanel_TKDTTheoNgay());
    	jTabbedPaneTKDoanhThu.addTab("Theo Tháng", new JPanel_TKDTTheoThang());
    	jTabbedPaneTKDoanhThu.addTab("Theo Năm", new JPanel_TKDTTheoNam());
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblThongKe = new javax.swing.JLabel();
        cboDoiTuongTK = new javax.swing.JComboBox<>();
        lblTimKiemNV = new javax.swing.JLabel();
        lblSDT = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        lblTenNV = new javax.swing.JLabel();
        txtTenNV = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDanhSachNV = new javax.swing.JTable();
        jTabbedPaneTKDoanhThu = new javax.swing.JTabbedPane();

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblThongKe.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblThongKe.setText("Thống Kê:");

        cboDoiTuongTK.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cboDoiTuongTK.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Tất cả","Theo Cá Nhân"}));
        cboDoiTuongTK.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cboDoiTuongTKActionPerformed(evt);
			}
		});
        

        lblTimKiemNV.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lblTimKiemNV.setText("Tìm Kiếm Nhân Viên");

        lblSDT.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblSDT.setText("Số Điện Thoại: ");

        txtSDT.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSDT.setEditable(false);


        lblTenNV.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTenNV.setText("Tên Nhân Viên:");

        txtTenNV.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtTenNV.setEditable(false);
        

        tblDanhSachNV.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tblDanhSachNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Nhân Viên", "Tên Nhân Viên"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblDanhSachNV.setRowHeight(30);
        tblDanhSachNV.getTableHeader().setBackground(new Color(255, 127, 0));
        tblDanhSachNV.setShowHorizontalLines(true);
        tblDanhSachNV.setShowVerticalLines(true);
        jScrollPane1.setViewportView(tblDanhSachNV);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(lblTimKiemNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(222, 222, 222))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtSDT))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblThongKe)
                        .addGap(18, 18, 18)
                        .addComponent(cboDoiTuongTK, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTenNV)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboDoiTuongTK, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(lblTimKiemNV, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPaneTKDoanhThu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPaneTKDoanhThu, javax.swing.GroupLayout.DEFAULT_SIZE, 931, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPaneTKDoanhThu))
                .addContainerGap())
        );
        
        txtSDT.addKeyListener(this);
        txtTenNV.addKeyListener(this);
        
    }// </editor-fold>//GEN-END:initComponents
    
    public void DocDuLieuDatabaseVaoTable() {
		model.setRowCount(0);
		List<NhanVien> list = nhanvien_DAO.getAllNhanVien();
		for (NhanVien nv : list) {
				Object [] row = {nv.getMaNV(),nv.getTenNV()
					};
				model.addRow(row);
		}
	}
    
    private void cboDoiTuongTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimSDTActionPerformed
    	if(cboDoiTuongTK.getSelectedIndex()!=0) {
    		txtSDT.setEditable(true);
    		txtTenNV.setEditable(true);
    		DocDuLieuDatabaseVaoTable();
    		jTabbedPaneTKDoanhThu.removeAll();
    		jTabbedPaneTKDoanhThu.addTab("Theo Ngày", new JPanel_TKDTTheoNgayNV());
        	jTabbedPaneTKDoanhThu.addTab("Theo Tháng", new JPanel_TKDTTheoThangNV());
        	jTabbedPaneTKDoanhThu.addTab("Theo Năm", new JPanel_TKDTTheoNamNV());
    	}
    	else {
    		txtSDT.setEditable(false);
    		txtTenNV.setEditable(false);
    		model.setRowCount(0);
    		jTabbedPaneTKDoanhThu.removeAll();
        	jTabbedPaneTKDoanhThu.addTab("Theo Ngày", new JPanel_TKDTTheoNgay());
        	jTabbedPaneTKDoanhThu.addTab("Theo Tháng", new JPanel_TKDTTheoThang());
        	jTabbedPaneTKDoanhThu.addTab("Theo Năm", new JPanel_TKDTTheoNam());
    	}
    }//GEN-LAST:event_txtTimSDTActionPerformed
    
    @Override
	public void keyTyped(KeyEvent e) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void keyReleased(KeyEvent e) {
		Object obj = e.getSource();
		NhanVien_DAO nhanvien_DAO = new NhanVien_DAO();
		if (obj.equals(txtSDT)) {
			String sdtNV = txtSDT.getText().toString().trim();
			if(txtTenNV.getText().equals("")) {
				model.setRowCount(0);
				ArrayList<NhanVien> dsNV = nhanvien_DAO.getNhanVienTheoSDT(sdtNV);
				for (NhanVien nv : dsNV) {
						Object [] row = {nv.getMaNV(),nv.getTenNV()
							};
						model.addRow(row);
				}
			}else {
				model.setRowCount(0);
				String tenNV = txtTenNV.getText();
				ArrayList<NhanVien> dsNV = nhanvien_DAO.getNhanVienTK(tenNV, sdtNV);
				for (NhanVien nv : dsNV) {
					Object [] row = {nv.getMaNV(),nv.getTenNV()
						};
					model.addRow(row);
				}
			}
			
		}else if(obj.equals(txtTenNV)) {
			String tenNV = txtTenNV.getText().toString().trim();
			if(txtSDT.getText().equals("")) {
				model.setRowCount(0);
				ArrayList<NhanVien> dsNV = nhanvien_DAO.getNhanVienTheoTenNV(tenNV);
				for (NhanVien nv : dsNV) {
					Object [] row = {nv.getMaNV(),nv.getTenNV()
						};
					model.addRow(row);
				}
			}else {
				String sdtNV = txtSDT.getText();
				model.setRowCount(0);
				ArrayList<NhanVien> dsNV = nhanvien_DAO.getNhanVienTK(tenNV, sdtNV);
				for (NhanVien nv : dsNV) {
					Object [] row = {nv.getMaNV(),nv.getTenNV()
						};
					model.addRow(row);
				}
			}
		}
	}
	
	@Override
	public void keyPressed(KeyEvent e) {
		
	}
	
	private void selectedRow(int row) {
		if(row != -1) {
			tblDanhSachNV.setRowSelectionInterval(row, row);
			tblDanhSachNV.scrollRectToVisible(tblDanhSachNV.getCellRect(row, row, true));
		}
	}
	
	public static JTable getTable() {
		return tblDanhSachNV;
    }

    public static JComboBox<String> getCbo() {
		return cboDoiTuongTK;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JComboBox<String> cboDoiTuongTK;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPaneTKDoanhThu;
    private javax.swing.JLabel lblSDT;
    private javax.swing.JLabel lblTenNV;
    private javax.swing.JLabel lblThongKe;
    private javax.swing.JLabel lblTimKiemNV;
    private static javax.swing.JTable tblDanhSachNV;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenNV;
    private NhanVien_DAO nhanvien_DAO;
    private DefaultTableModel model;
    // End of variables declaration//GEN-END:variables
}
